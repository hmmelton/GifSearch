apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.hmmelton.gifsearch"
        minSdkVersion 21
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.gifUrl.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

repositories {
    jcenter()
}

configurations {
    ktlint
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${libraries.kotlin}"
    ktlint "com.github.shyiko:ktlint:${libraries.ktlint}"

    // Android dependencies
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.android.support:design:27.1.1'

    // Architecture components
    implementation 'android.arch.paging:runtime:1.0.1'
    implementation 'android.arch.lifecycle:extensions:1.1.1'

    // Retrofit networking library
    implementation "com.squareup.retrofit2:retrofit:${libraries.retrofit}"
    implementation "com.squareup.retrofit2:converter-moshi:${libraries.retrofit}"

    // Moshi JSON conversion
    implementation "com.squareup.moshi:moshi:${libraries.moshi}"
    implementation "com.squareup.moshi:moshi-kotlin:${libraries.moshi}"

    // Glide
    implementation "com.github.bumptech.glide:glide:${libraries.glide}"
    kapt "com.github.bumptech.glide:compiler:${libraries.glide}"

    // Test dependencies
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    testImplementation "com.squareup.okhttp3:mockwebserver:${libraries.mockWebServer}"
}

task('ktlint', type: JavaExec, group: 'verification') {
    description = 'Check Kotlin code style.'
    classpath = configurations.ktlint
    main = 'com.github.shyiko.ktlint.Main'
    args '--verbose', 'src/**/*.kt'
}
check.dependsOn ktlint

task('ktlintFormat', type: JavaExec, group: 'formatting') {
    description = 'Fix Kotlin code style deviations.'
    classpath = configurations.ktlint
    main = 'com.github.shyiko.ktlint.Main'
    args '-F', 'src/**/*.kt'
}
